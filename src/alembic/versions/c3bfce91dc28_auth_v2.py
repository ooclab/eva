"""auth v2

Revision ID: c3bfce91dc28
Revises: 7ec911ec630b
Create Date: 2020-04-13 10:03:16.378305

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision = "c3bfce91dc28"
down_revision = "7ec911ec630b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "eva_identity",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "eva_idp",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "LDAP",
                "OIDC",
                "GOOGLE",
                "FACEBOOK",
                "TWITTER",
                "GITHUB",
                "GITLAB",
                "WECHAT",
                "WEIBO",
                name="idptype",
            ),
            nullable=False,
        ),
        sa.Column("config", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "eva_credential",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("identifier", sa.String(length=64), nullable=False),
        sa.Column(
            "identifier_type",
            sa.Enum("USERNAME", "EMAIL", "PHONE", "IDP", name="identifiertype"),
            nullable=False,
        ),
        sa.Column("identity_id", sa.Integer(), nullable=True),
        sa.Column("idp_id", sa.Integer(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["identity_id"], ["eva_identity.id"]),
        sa.ForeignKeyConstraint(["idp_id"], ["eva_idp.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "eva_password",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("shadow", sa.String(length=512), nullable=False),
        sa.Column("credential_id", sa.Integer(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.Column("expires_in", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["credential_id"], ["eva_credential.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "eva_securitycode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("shadow", sa.String(length=512), nullable=False),
        sa.Column("credential_id", sa.Integer(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("expires_in", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["credential_id"], ["eva_credential.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("auth_user_session")
    op.drop_table("auth_app_session")
    op.drop_table("auth_app")
    op.drop_table("auth_user")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_user",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('auth_user_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("uuid", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "username", sa.VARCHAR(length=64), autoincrement=False, nullable=False
        ),
        sa.Column(
            "password", sa.VARCHAR(length=512), autoincrement=False, nullable=True
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint("id", name="auth_user_pkey"),
        sa.UniqueConstraint("username", name="auth_user_username_key"),
        sa.UniqueConstraint("uuid", name="auth_user_uuid_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "auth_app",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('auth_app_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("app_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "app_secret", sa.VARCHAR(length=256), autoincrement=False, nullable=False
        ),
        sa.Column("name", sa.VARCHAR(length=128), autoincrement=False, nullable=True),
        sa.Column(
            "summary", sa.VARCHAR(length=1024), autoincrement=False, nullable=True
        ),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["auth_user.id"], name="auth_app_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="auth_app_pkey"),
        sa.UniqueConstraint("app_id", name="auth_app_app_id_key"),
        sa.UniqueConstraint("name", name="auth_app_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "auth_app_session",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "refresh_token", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.Column("app_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "expires_in", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["app_id"], ["auth_app.id"], name="auth_app_session_app_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="auth_app_session_pkey"),
        sa.UniqueConstraint("refresh_token", name="auth_app_session_refresh_token_key"),
    )
    op.create_table(
        "auth_user_session",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "refresh_token", sa.VARCHAR(length=128), autoincrement=False, nullable=False
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "expires_in", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["auth_user.id"], name="auth_user_session_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="auth_user_session_pkey"),
        sa.UniqueConstraint(
            "refresh_token", name="auth_user_session_refresh_token_key"
        ),
    )
    op.drop_table("eva_securitycode")
    op.drop_table("eva_password")
    op.drop_table("eva_credential")
    op.drop_table("eva_idp")
    op.drop_table("eva_identity")

    op.execute("DROP TYPE idptype;")
    op.execute("DROP TYPE identifiertype;")
    # ### end Alembic commands ###
