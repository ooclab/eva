"""Added auth tables

Revision ID: 7ec911ec630b
Revises: 
Create Date: 2020-04-12 15:12:13.607249

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils

from haomo.conf import settings

# from codebase.models.auth import User

# revision identifiers, used by Alembic.
revision = "7ec911ec630b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "auth_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
        sa.Column("username", sa.String(length=64), nullable=False),
        sa.Column("password", sa.String(length=512), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "auth_app",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("app_id", sqlalchemy_utils.types.uuid.UUIDType(), nullable=True),
        sa.Column("app_secret", sa.String(length=256), nullable=False),
        sa.Column("name", sa.String(length=128), nullable=True),
        sa.Column("summary", sa.String(length=1024), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("updated", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["auth_user.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("app_id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "auth_user_session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sa.String(length=128), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("expires_in", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["auth_user.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("refresh_token"),
    )
    op.create_table(
        "auth_app_session",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("refresh_token", sa.String(length=128), nullable=False),
        sa.Column("app_id", sa.Integer(), nullable=True),
        sa.Column("created", sa.DateTime(), nullable=True),
        sa.Column("expires_in", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["app_id"], ["auth_app.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("refresh_token"),
    )
    # ### end Alembic commands ###

    # bind = op.get_bind()
    # db = sa.orm.Session(bind=bind)
    # db.add(User(username=settings.ADMIN_USERNAME,
    #             password=settings.ADMIN_PASSWORD))
    # db.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("auth_app_session")
    op.drop_table("auth_user_session")
    op.drop_table("auth_app")
    op.drop_table("auth_user")
    # ### end Alembic commands ###
